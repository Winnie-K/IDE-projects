<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--目标对象-->
    <bean id="orderBiz" class="edu.hunau.cxb.aop.config.target.OrderServiceImpl"></bean>
    <!--声明切面类:普通的java类-->
    <bean id="myAspect" class="edu.hunau.cxb.aop.config.MyAspect"></bean>

    <!--将普通java类myAspect转换为切面类-->
    <aop:config>
        <aop:pointcut id="roundPointCut"
                      expression="execution(* edu.hunau.cxb.aop.config.target.*.*(..))"></aop:pointcut>
        <!--指定作为切面类的对象-->
        <aop:aspect id="advisor" ref="myAspect">
            <!--aop:before 表示为前置通知
              method: 普通类提供额外功能的方法名(MyAspect类中的beforeAdvice方法)
            -->
            <aop:before method="beforeAdvice"
                        pointcut="execution(* edu.hunau.cxb.aop.config.target.OrderServiceImpl.add*(..))"></aop:before>
            <aop:after-returning method="afterAdvice" pointcut="args(int)" returning="retVal"></aop:after-returning>
            <aop:around method="round" pointcut-ref="roundPointCut"></aop:around>
        </aop:aspect>
    </aop:config>

    <!--开启注解自动扫描-->
    <context:component-scan base-package="edu.hunau.cxb.aop.config"></context:component-scan>

    <!--通过目标对象自动创建代理类-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>